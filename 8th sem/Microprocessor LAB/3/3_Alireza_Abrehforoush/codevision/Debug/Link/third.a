
	.DSEG
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void part1()
; 0001 000E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 000F char my_str[50];
; 0001 0010 lcd_clear();
;PCODE: $0000000F VOL: 0
;	my_str -> Y+0
;PCODE: $00000010 VOL: 0
; 0001 0011 sprintf(my_str, "Abrehforoush\n9816603");
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0001 0012 lcd_puts(my_str);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0001 0013 return;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0001 0014 }
;PCODE: $0000001E VOL: 0
;void part2()
; 0001 0017 {
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 0018 char walking_text[100];
; 0001 0019 char current_window[20];
; 0001 001A int i = 0;
; 0001 001B sprintf(walking_text, "                   Welcome to the Microprocessor Laborato ...
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;	walking_text -> Y+22
;	current_window -> Y+2
;	i -> R16,R17
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0001 001C for(i = 0; i < 100; i++)
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0001 001D {
; 0001 001E lcd_clear();
;PCODE: $00000038 VOL: 0
; 0001 001F strncpy(current_window, &walking_text[i], 16);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0001 0020 lcd_puts(current_window);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0001 0021 sprintf(current_window, '');
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0001 0022 delay_ms(50);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0001 0023 }
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0001 0024 return;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 0025 }
;PCODE: $00000059 VOL: 0
;char keypad2(void)
; 0001 0028 {
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0001 0029 int r, c;
; 0001 002A int key = 100;
; 0001 002B 
; 0001 002C while(key == 100)
;PCODE: $0000005C VOL: 0
;	r -> R16,R17
;	c -> R18,R19
;	key -> R20,R21
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 002D {
; 0001 002E for (r = 0; r < 4; r++)
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0001 002F {
; 0001 0030 PORTB = row[r];
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0001 0031 
; 0001 0032 
; 0001 0033 c = 20;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0001 0034 delay_ms(10);
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0001 0035 if (PINB.0==1) c=0;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0001 0036 if (PINB.1==1) c=1;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0001 0037 if (PINB.2==1) c=2;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0001 0038 if (PINB.3==1) c=3;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0001 0039 if (!(c==20))
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0001 003A {
; 0001 003B key=(r*4) + c;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0001 003C PORTB = 0xF0;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0001 003D while (PINB.0==1) {}
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0001 003E while (PINB.1==1) {}
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0001 003F while (PINB.2==1) {}
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0001 0040 while (PINB.3==1) {}
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0001 0041 }
; 0001 0042 PORTB=0xF0;
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0001 0043 }
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0001 0044 }
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0001 0045 
; 0001 0046 return data_key[key];
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0001 0047 }
;PCODE: $000000BE VOL: 0
;void part3()
; 0001 004A {
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0001 004B DDRB = 0xf0;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0001 004C DDRC.0 = 1;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0001 004D while (1)
;PCODE: $000000C5 VOL: 0
; 0001 004E {
; 0001 004F lcd_putchar(keypad2());
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0001 0050 delay_ms(500);
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0001 0051 lcd_clear();
;PCODE: $000000CB VOL: 0
; 0001 0052 }
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0001 0053 }
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;void lcdBaseState()
; 0001 0056 {
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0001 0057 lcdPos = 0;
;PCODE: $000000D2 VOL: 0
; 0001 0058 lcd_clear();
;PCODE: $000000D3 VOL: 0
; 0001 0059 lcd_gotoxy(lcdPos, 0);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0001 005A }
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;char readFromKeyPad(){
; 0001 005C char readFromKeyPad(){
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0001 005D int i;
; 0001 005E char h = 0;
; 0001 005F 
; 0001 0060 while(h == 0){
;PCODE: $000000DB VOL: 0
;	i -> R16,R17
;	h -> R19
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0001 0061 for(i = 0; i < 4; i++){
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0001 0062 PORTB = readRow[i];
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0001 0063 if(PINB.0){
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0001 0064 h = dataKeys[i][0];
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0001 0065 break;}
;PCODE: $000000F8 VOL: 0
; 0001 0066 else if(PINB.1){
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0001 0067 h = dataKeys[i][1];
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0001 0068 break;}
;PCODE: $00000104 VOL: 0
; 0001 0069 else if(PINB.2){
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0001 006A h = dataKeys[i][2];
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0001 006B break;}
;PCODE: $00000110 VOL: 0
; 0001 006C else if(PINB.3){
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0001 006D h = dataKeys[i][3];
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0001 006E break;}
;PCODE: $0000011C VOL: 0
; 0001 006F delay_ms(5);
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0001 0070 }
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0001 0071 while(PINB.0|PINB.1|PINB.2|PINB.3);
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0001 0072 }
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0001 0073 return h;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0001 0074 }
;PCODE: $00000140 VOL: 0
;void part4()
; 0001 0077 {
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0001 0078 lcdBaseState();
;PCODE: $00000143 VOL: 0
; 0001 0079 lcd_puts("=>press some Key");
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0001 007A delay_ms(2500);
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0001 007B lcdBaseState();
;PCODE: $00000149 VOL: 0
; 0001 007C GICR |= (1 << INT1);
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0001 007D PORTB = 0xff;
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0001 007E while(lcdPos < 6);
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0001 007F GICR |= (0 << INT1);
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0001 0080 PORTB = 0xf0;
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0001 0081 }
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0

	.DSEG
_0x20036:
	.BYTE 0x11
;void part5()
; 0001 0085 {

	.CSEG
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0001 0086 char speed[2];
; 0001 0087 char time[2];
; 0001 0088 char weigt[2];
; 0001 0089 char temp[2];
; 0001 008A 
; 0001 008B int speedLimit[2] = {0, 50};
; 0001 008C int timeLimit[2] = {0, 99};
; 0001 008D int weigtLimit[2] = {0, 99};
; 0001 008E int tempLimit[2] = {20, 80};
; 0001 008F 
; 0001 0090 char buff[16];
; 0001 0091 char buf[2];
; 0001 0092 int val;
; 0001 0093 
; 0001 0094 lcdBaseState();
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;	speed -> Y+42
;	time -> Y+40
;	weigt -> Y+38
;	temp -> Y+36
;	speedLimit -> Y+32
;	timeLimit -> Y+28
;	weigtLimit -> Y+24
;	tempLimit -> Y+20
;	buff -> Y+4
;	buf -> Y+2
;	val -> R16,R17
;PCODE: $00000166 VOL: 0
; 0001 0095 
; 0001 0096 lcd_gotoxy(0, 0);
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0001 0097 sprintf(buff, "Speed:??(%d-%d%c)", speedLimit[0], speedLimit[1], 'r');
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0001 0098 lcd_puts(buff);
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0001 0099 
; 0001 009A lcdPos = strlen("speed")+ 1;
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0001 009B lcd_gotoxy(lcdPos, 0);
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0001 009C speed[0] = readFromKeyPad();
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0001 009D lcd_putchar(speed[0]);
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0001 009E 
; 0001 009F lcdPos++;
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0001 00A0 lcd_gotoxy(lcdPos, 0);
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0001 00A1 speed[1] = readFromKeyPad();
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0001 00A2 lcd_putchar(speed[1]);
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0001 00A3 
; 0001 00A4 sprintf(buf, "%c%c", speed[0], speed[1]);
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0001 00A5 val = atoi(buf);
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0001 00A6 if(val > speedLimit[1] || val < speedLimit[0]){
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0001 00A7 lcd_gotoxy(0, 0);
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0001 00A8 speed[0] = speed[1] = 'E';
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0001 00A9 sprintf(buff, "Speed:EE(%d-%d%c)", speedLimit[0], speedLimit[1], 'r');
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0001 00AA lcd_puts(buff);
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0001 00AB }
; 0001 00AC 
; 0001 00AD lcd_gotoxy(0, 1);
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0001 00AE sprintf(buff, "Time:??(%d-%d%c)", timeLimit[0], timeLimit[1], 's');
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0001 00AF lcd_puts(buff);
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0001 00B0 
; 0001 00B1 lcdPos = strlen("time")+ 1;
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0001 00B2 lcd_gotoxy(lcdPos, 1);
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0001 00B3 time[0] = readFromKeyPad();
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0001 00B4 lcd_putchar(time[0]);
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0001 00B5 
; 0001 00B6 lcdPos++;
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0001 00B7 lcd_gotoxy(lcdPos, 1);
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0001 00B8 time[1] = readFromKeyPad();
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0001 00B9 lcd_putchar(time[1]);
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0001 00BA 
; 0001 00BB sprintf(buf, "%c%c", time[0], time[1]);
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0001 00BC val = atoi(buf);
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0001 00BD if(val > timeLimit[1] || val < timeLimit[0])
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0001 00BE {
; 0001 00BF lcd_gotoxy(0, 1);
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0001 00C0 time[0] = time[1] = 'E';
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0001 00C1 sprintf(buff, "Time:EE(%d-%d%c)", timeLimit[0], timeLimit[1], 's');
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
; 0001 00C2 lcd_puts(buff);
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0001 00C3 }
; 0001 00C4 
; 0001 00C5 delay_ms(1000);
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0001 00C6 
; 0001 00C7 
; 0001 00C8 lcdBaseState();
;PCODE: $0000022D VOL: 0
; 0001 00C9 
; 0001 00CA lcd_gotoxy(0, 0);
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0001 00CB sprintf(buff, "Weigt:??(%d-%d%c)", weigtLimit[0], weigtLimit[1], 'F');
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
; 0001 00CC lcd_puts(buff);
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0001 00CD 
; 0001 00CE lcdPos = strlen("speed")+ 1;
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0001 00CF lcd_gotoxy(lcdPos, 0);
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0001 00D0 weigt[0] = readFromKeyPad();
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0001 00D1 lcd_putchar(weigt[0]);
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0001 00D2 
; 0001 00D3 lcdPos++;
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0001 00D4 lcd_gotoxy(lcdPos, 0);
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0001 00D5 weigt[1] = readFromKeyPad();
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0001 00D6 lcd_putchar(weigt[1]);
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0001 00D7 
; 0001 00D8 sprintf(buf, "%c%c", weigt[0], weigt[1]);
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
; 0001 00D9 val = atoi(buf);
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
; 0001 00DA if(val > weigtLimit[1] || val < weigtLimit[0]){
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
; 0001 00DB weigt[0] = weigt[1] = 'E';
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0001 00DC lcd_gotoxy(0, 0);
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0001 00DD sprintf(buff, "Weigt:EE(%d-%d%c)", weigtLimit[0], weigtLimit[1], 'F');
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0001 00DE lcd_puts(buff);
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0001 00DF }
; 0001 00E0 
; 0001 00E1 
; 0001 00E2 lcd_gotoxy(0, 1);
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0001 00E3 sprintf(buff, "Temp:??(%d-%d%c)", tempLimit[0], tempLimit[1], 'C');
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
; 0001 00E4 lcd_puts(buff);
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
; 0001 00E5 
; 0001 00E6 lcdPos = strlen("time")+ 1;
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
; 0001 00E7 lcd_gotoxy(lcdPos, 1);
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
; 0001 00E8 temp[0] = readFromKeyPad();
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0001 00E9 lcd_putchar(temp[0]);
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0001 00EA 
; 0001 00EB lcdPos++;
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0001 00EC lcd_gotoxy(lcdPos, 1);
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0001 00ED temp[1] = readFromKeyPad();
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0001 00EE lcd_putchar(temp[1]);
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0001 00EF 
; 0001 00F0 sprintf(buf, "%c%c", temp[0], temp[1]);
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0001 00F1 val = atoi(buf);
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0001 00F2 if(val > tempLimit[1] || val < tempLimit[0])
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
; 0001 00F3 {
; 0001 00F4 temp[0] = temp[1] = 'E';
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
; 0001 00F5 lcd_gotoxy(0, 1);
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
; 0001 00F6 sprintf(buff, "Temp:EE(%d-%d%c)", tempLimit[0], tempLimit[1], 'C');
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0001 00F7 lcd_puts(buff);
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0001 00F8 }
; 0001 00F9 
; 0001 00FA delay_ms(1000);
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0001 00FB 
; 0001 00FC 
; 0001 00FD lcdBaseState();
;PCODE: $000002F4 VOL: 0
; 0001 00FE sprintf(buff, "S:%c%cr|Time:%c%cs", speed[0], speed[1], time[0], time[0]);
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
; 0001 00FF lcd_puts(buff);
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
; 0001 0100 lcd_gotoxy(0, 1);
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
; 0001 0101 sprintf(buff, "W:%c%cF|Temp:%c%cC", weigt[0], weigt[1], temp[0], temp[0]);
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
; 0001 0102 lcd_puts(buff);
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
; 0001 0103 
; 0001 0104 delay_ms(10000);
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
; 0001 0105 }
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0

	.DSEG
_0x2003B:
	.BYTE 0x16
