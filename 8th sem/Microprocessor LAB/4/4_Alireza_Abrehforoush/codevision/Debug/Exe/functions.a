;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void displayTime(char  hour, char minute, char second, char msec)
; 0001 0004 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0005 char timeBuf[16];
; 0001 0006 lcd_gotoxy(0,0);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	hour -> Y+19
;	minute -> Y+18
;	second -> Y+17
;	msec -> Y+16
;	timeBuf -> Y+0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0001 0007 sprintf(timeBuf, "  %02d:%02d:%02d:%02d  ", hour, minute, second, msec);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0001 0008 lcd_puts(timeBuf);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0001 0009 }
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;void displayCapacity(int capacity)
; 0001 000C {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0001 000D char capBuf[16];
; 0001 000E lcd_gotoxy(0,1);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;	capacity -> Y+16
;	capBuf -> Y+0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0001 000F sprintf(capBuf, "CE:%4d ** ", capacity);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0001 0010 lcd_puts(capBuf);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0001 0011 }
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;void initDisplay()
; 0001 0014 {
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0001 0015 displayTime(hour, minute, second, csec);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0001 0016 displayCapacity(capacity);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0001 0017 displayPeriod();
;PCODE: $00000054 VOL: 0
; 0001 0018 }
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;void stopwatch()
; 0001 001B {
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 001C if(PINB.4==0)
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0001 001D {
; 0001 001E TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01)  ...
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0001 001F }
; 0001 0020 
; 0001 0021 if(PINB.5==0)
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0001 0022 {
; 0001 0023 if(TCCR0==0x05)
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0001 0024 {
; 0001 0025 TCCR0=0x00;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0001 0026 }
; 0001 0027 else if(TCCR0 == 0x00)
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0001 0028 {
; 0001 0029 TCNT0 = 0x00;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0001 002A csec = 0;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0001 002B second = 0;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0001 002C minute = 0;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0001 002D hour = 0;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0001 002E displayTime(hour, minute, second, csec);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0001 002F }
; 0001 0030 }
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0001 0031 }
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;void parking()
; 0001 0034 {
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0001 0035 if(PINB.7 == 0)
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0001 0036 {
; 0001 0037 capacity = capacity <= 1 ? 0 : capacity - 1;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0001 0038 }
; 0001 0039 if(PINB.3 == 0)
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0001 003A {
; 0001 003B capacity = capacity >= 1000 ? 1000 : capacity + 1;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0001 003C }
; 0001 003D displayCapacity(capacity);
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0001 003E }
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;void displayPeriod()
; 0001 0041 {
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0001 0042 lcd_gotoxy(11, 1);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0001 0043 lcd_puts("50US5");
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0001 0044 }
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0

	.DSEG
_0x20010:
	.BYTE 0x6
